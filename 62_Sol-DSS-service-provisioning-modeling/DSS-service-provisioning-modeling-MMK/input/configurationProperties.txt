nHoursPerWorkingDay=14;
nDaysWorking=2;
JobProbabilityPerTimeUnitHrsPerc=7-8/25;8-11/60;11-17/35;17-19/80;19-21/35;
JobProcessingProbabilityTimeUnitsPerc=1-3/30;3-5/40;5-7/26;7-20/4;
nMinutesPerHourWorking=60;
N_SUBSCRIBERS_MIN=1;
N_SUBSCRIBERS_MAX=10;
BUFFER_SIZE_PER_THREAD=14;
N_RECURSIONS=10;
AVERAGE_CHECK_CURRENCY_UNIT=150;
SUBSCRIBER_SALARY_CURRENCY_UNIT_HOUR=30;

Current application is using Method Monte-Karlo for modeling of a food store job. 
'Publishers' are 'job distributors' / security guys, who spread customers to the different queues to the cash registers in this food
 	supermarket of approximately 150 m2 client's square.
'Subscribers' are these cashiers ('employees').
'Threads' are waiting for execution (clients in the line) or are executing (when cashier is punching goods through the checkout).
'Buffer size per thread' is the maximum number of people in the queue to one cashier. In case of overloading, people are rejected (go to
	another shops without buying any products in our shop).
Results of the modeling will be located in the last folder in the 'output' folder.